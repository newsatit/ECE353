


ARM Macro Assembler    Page 1 


    1 00000000         ; Filename:     main.s 
    2 00000000         ; Author:       ece353 staff 
    3 00000000         ; Description:  
    4 00000000         
    5 00000000                 export           __main
    6 00000000         
    7 00000000         ;******************************************
    8 00000000         ; Symbolic Constants
    9 00000000         ;****************************************** 
   10 00000000 00000004 
                       WORD    EQU              4
   11 00000000         
   12 00000000         
   13 00000000         ;******************************************
   14 00000000         ; SRAM
   15 00000000         ;******************************************
   16 00000000                 AREA             SRAM, READWRITE
   17 00000000         ;******************************************
   18 00000000         ; Load Store Review
   19 00000000         ;******************************************
   20 00000000 00 00 00 
              00       RESULT  SPACE            WORD
   21 00000004         
   22 00000004         
   23 00000004         ;******************************************
   24 00000004         ; Load Store Multiple
   25 00000004         ;******************************************
   26 00000004 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 2 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DEST_ARRAY
                               SPACE            32*WORD
   27 00000084 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DEST2_ARRAY
                               SPACE            32*WORD
   28 00000104 00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DEST3_ARRAY
                               SPACE            32*WORD
   29 00000184                 align
   30 00000184         
   31 00000184         
   32 00000184         
   33 00000184         
   34 00000184         
   35 00000184         ;**********************************************
   36 00000184         ; FLASH
   37 00000184         ;**********************************************
   38 00000184                 AREA             FLASH, CODE, READONLY
   39 00000000         ;******************************************
   40 00000000         ; Load Store Review
   41 00000000         ;******************************************
   42 00000000 45 43 45 
              33 35 33 ASCII_ARRAY
                               DCB              "ECE353"
   43 00000006 00              DCB              0
   44 00000007         



ARM Macro Assembler    Page 4 


   45 00000007         ;******************************************
   46 00000007         ; Load Store Multiple
   47 00000007         ;******************************************
   48 00000007 00 00000000 
                       SRC_ARRAY
                               DCD              0x00000000
   49 0000000C 00001111        DCD              0x00001111
   50 00000010 00002222        DCD              0x00002222
   51 00000014 00003333        DCD              0x00003333
   52 00000018 00004444        DCD              0x00004444
   53 0000001C 00005555        DCD              0x00005555
   54 00000020 00006666        DCD              0x00006666
   55 00000024 00007777        DCD              0x00007777
   56 00000028 00008888        DCD              0x00008888
   57 0000002C 00009999        DCD              0x00009999
   58 00000030 0000AAAA        DCD              0x0000AAAA
   59 00000034 0000BBBB        DCD              0x0000BBBB
   60 00000038 0000CCCC        DCD              0x0000CCCC
   61 0000003C 0000DDDD        DCD              0x0000DDDD
   62 00000040 0000EEEE        DCD              0x0000EEEE
   63 00000044 0000FFFF        DCD              0x0000FFFF
   64 00000048 11110000        DCD              0x11110000
   65 0000004C 11111111        DCD              0x11111111
   66 00000050 11112222        DCD              0x11112222
   67 00000054 11113333        DCD              0x11113333
   68 00000058 11114444        DCD              0x11114444
   69 0000005C 11115555        DCD              0x11115555
   70 00000060 11116666        DCD              0x11116666
   71 00000064 11117777        DCD              0x11117777
   72 00000068 11118888        DCD              0x11118888
   73 0000006C 11119999        DCD              0x11119999
   74 00000070 1111AAAA        DCD              0x1111AAAA
   75 00000074 1111BBBB        DCD              0x1111BBBB
   76 00000078 1111CCCC        DCD              0x1111CCCC
   77 0000007C 1111DDDD        DCD              0x1111DDDD
   78 00000080 1111EEEE        DCD              0x1111EEEE
   79 00000084 1111FFFF        DCD              0x1111FFFF
   80 00000088                 align
   81 00000088         
   82 00000088         
   83 00000088         
   84 00000088         
   85 00000088         
   86 00000088         ;**********************************************
   87 00000088         ; Code (FLASH) Segment
   88 00000088         ; main assembly program
   89 00000088         ;**********************************************
   90 00000088         __main  PROC
   91 00000088         
   92 00000088         ;******************************************
   93 00000088         ; Load Store Review
   94 00000088         ;******************************************
   95 00000088 4823            LDR              R0, =(ASCII_ARRAY)
   96 0000008A 4924            LDR              R1, =(RESULT)
   97 0000008C F04F 0300       MOV              R3, #0
   98 00000090         
   99 00000090         START_LOOP
  100 00000090 7802            LDRB             R2, [R0]
  101 00000092 2A00            CMP              R2, #0



ARM Macro Assembler    Page 5 


  102 00000094 D00B            BEQ              END_LOOP
  103 00000096 F1A2 0230       SUB              R2, R2, 0x30
  104 0000009A 4413            ADD              R3, R3, R2
  105 0000009C 2A00            CMP              R2, #0
  106 0000009E BFB8 1A9B       SUBLT            R3, R2
  107 000000A2 2A09            CMP              R2, #9
  108 000000A4 BFC8 1A9B       SUBGT            R3, R2
  109 000000A8 F100 0001       ADD              R0, R0, #1
  110 000000AC E7F0            B                START_LOOP
  111 000000AE         END_LOOP
  112 000000AE 600B            STR              R3, [R1]
  113 000000B0         
  114 000000B0         
  115 000000B0         
  116 000000B0         ;******************************************
  117 000000B0         ; Load Store Multiple
  118 000000B0         ;******************************************
  119 000000B0         ; Load the address of SRC_ARRAY into R0
  120 000000B0 481B            LDR              R0, =(SRC_ARRAY)
  121 000000B2         
  122 000000B2         
  123 000000B2         ; Load the address of DEST_ARRAY into R1
  124 000000B2 491C            LDR              R1, =(DEST_ARRAY)
  125 000000B4         
  126 000000B4         
  127 000000B4         ; Load the address of DEST2_ARRAY into R2
  128 000000B4 4A1C            LDR              R2, =(DEST2_ARRAY)
  129 000000B6         
  130 000000B6         
  131 000000B6         ; Using LDM, load the first 8 WORDs in SRC_ARRAY
  132 000000B6         ; Use Registers R3-R10 as the destination 
  133 000000B6         ; of the LDM instruction
  134 000000B6 E890 07F8       LDM              R0, {R3-R10}
  135 000000BA         
  136 000000BA         
  137 000000BA         ; Use STM to store R3-R10 to DEST_ARRAY
  138 000000BA E881 07F8       STM              R1, {R3-R10}
  139 000000BE         
  140 000000BE         
  141 000000BE         ; Use STM to store R3-R10 to DEST2_ARRAY
  142 000000BE         ; Specify the order of the registers in
  143 000000BE         ; revers order (STM R2, {R10, R9, R8, R7, R6, R5, R4, R3
                       })
  144 000000BE         ; Observe if the order of the registers changes
  145 000000BE         ; how the data arranged in SRAM
  146 000000BE E882 07F8       STM              R2, {R10, R9, R8, R7, R6, R5, R
4, R3}
  147 000000C2         
  148 000000C2         
  149 000000C2         
  150 000000C2         
  151 000000C2         ; Using LDM, load the second 8 WORDs in SRC_ARRAY
  152 000000C2         ; Use Registers R3-R10 as the destination 
  153 000000C2         ; of the LDM instruction.
  154 000000C2         ; Hint, you will need to modify R0 so that
  155 000000C2         ; it contains the address of SRC_ARRAY[8]
  156 000000C2 F100 0020       ADD              R0, R0, #8*WORD
  157 000000C6 E890 07F8       LDM              R0, {R3-R10}
  158 000000CA         



ARM Macro Assembler    Page 6 


  159 000000CA         
  160 000000CA         
  161 000000CA         
  162 000000CA         ; Use STM to store R3-R10 to DEST_ARRAY[8]
  163 000000CA         ; Hint, you will need to modify R1 so that
  164 000000CA         ; it contains the address of DEST_ARRAY[8]
  165 000000CA F101 0120       ADD              R1, R1, #8*WORD
  166 000000CE E881 07F8       STM              R1, {R3-R10}
  167 000000D2         
  168 000000D2         
  169 000000D2         
  170 000000D2         ; Copy the contents of SRC_ARRAY to DEST2_ARRAY
  171 000000D2         ; 8 WORDs at a time using LDM/STM. This time use
  172 000000D2         ; the version of LDM/STM that updates the base address
  173 000000D2         ; Load the address of SRC_ARRAY into R0
  174 000000D2 4813            LDR              R0, =(SRC_ARRAY)
  175 000000D4 E8B0 07F8       LDM              R0!, {R3-R10}
  176 000000D8 E8A2 07F8       STM              R2!, {R3-R10}
  177 000000DC E8B0 07F8       LDM              R0!, {R3-R10}
  178 000000E0 E8A2 07F8       STM              R2!, {R3-R10}
  179 000000E4         
  180 000000E4         
  181 000000E4         
  182 000000E4         ; Write code that uses a loop to copies SRC_ARRAY
  183 000000E4         ; to DEST3_ARRAY.  Each iteraction of the loop should
  184 000000E4         ; copy 4 WORDs of the array
  185 000000E4         ; 
  186 000000E4         ; for(i = 0; i < 8; i++)
  187 000000E4         ; {
  188 000000E4         ;       Copy 4 WORDs from SRC_ARRAY to DEST3_ARRAY
  189 000000E4         ; }
  190 000000E4         
  191 000000E4         ; R5 For Storing tempdata
  192 000000E4         ; R4 as counter
  193 000000E4 480E            LDR              R0, =(SRC_ARRAY)
  194 000000E6 4B11            LDR              R3, =(DEST3_ARRAY)
  195 000000E8 F04F 0400       MOV              R4, #0
  196 000000EC         START_FOR
  197 000000EC 2C08            CMP              R4, #8
  198 000000EE DA12            BGE              END_FOR
  199 000000F0 F850 5B04       LDR              R5, [R0], #WORD
  200 000000F4 F843 5B04       STR              R5, [R3], #WORD
  201 000000F8 F850 5B04       LDR              R5, [R0], #WORD
  202 000000FC F843 5B04       STR              R5, [R3], #WORD
  203 00000100 F850 5B04       LDR              R5, [R0], #WORD
  204 00000104 F843 5B04       STR              R5, [R3], #WORD
  205 00000108 F850 5B04       LDR              R5, [R0], #WORD
  206 0000010C F843 5B04       STR              R5, [R3], #WORD
  207 00000110 F104 0401       ADD              R4, R4, #1
  208 00000114 E7EA            B                START_FOR
  209 00000116         END_FOR
  210 00000116         
  211 00000116         
  212 00000116         
  213 00000116         
  214 00000116         
  215 00000116         ; DO NOT MODIFY ANTHING BELOW THIS LINE!!!
  216 00000116         
  217 00000116         INFINITE_LOOP



ARM Macro Assembler    Page 7 


  218 00000116 E7FE            B                INFINITE_LOOP
  219 00000118         
  220 00000118                 ENDP
  221 00000118                 align
  222 00000118         
  223 00000118         
  224 00000118                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\obj\ece353_main.d -o.\obj\ece353_main.o -I.\RTE\_Target_1 -IC
:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4
C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --predefine="__M
ICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 524" --predefine="_RTE_ SET
A 1" --predefine="TM4C123GH6PM SETA 1" --list=.\lst\ece353_main.lst ece353_main
.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DEST2_ARRAY 00000084

Symbol: DEST2_ARRAY
   Definitions
      At line 27 in file ece353_main.s
   Uses
      At line 128 in file ece353_main.s
Comment: DEST2_ARRAY used once
DEST3_ARRAY 00000104

Symbol: DEST3_ARRAY
   Definitions
      At line 28 in file ece353_main.s
   Uses
      At line 194 in file ece353_main.s
Comment: DEST3_ARRAY used once
DEST_ARRAY 00000004

Symbol: DEST_ARRAY
   Definitions
      At line 26 in file ece353_main.s
   Uses
      At line 124 in file ece353_main.s
Comment: DEST_ARRAY used once
RESULT 00000000

Symbol: RESULT
   Definitions
      At line 20 in file ece353_main.s
   Uses
      At line 96 in file ece353_main.s
Comment: RESULT used once
SRAM 00000000

Symbol: SRAM
   Definitions
      At line 16 in file ece353_main.s
   Uses
      None
Comment: SRAM unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ASCII_ARRAY 00000000

Symbol: ASCII_ARRAY
   Definitions
      At line 42 in file ece353_main.s
   Uses
      At line 95 in file ece353_main.s
Comment: ASCII_ARRAY used once
END_FOR 00000116

Symbol: END_FOR
   Definitions
      At line 209 in file ece353_main.s
   Uses
      At line 198 in file ece353_main.s
Comment: END_FOR used once
END_LOOP 000000AE

Symbol: END_LOOP
   Definitions
      At line 111 in file ece353_main.s
   Uses
      At line 102 in file ece353_main.s
Comment: END_LOOP used once
FLASH 00000000

Symbol: FLASH
   Definitions
      At line 38 in file ece353_main.s
   Uses
      None
Comment: FLASH unused
INFINITE_LOOP 00000116

Symbol: INFINITE_LOOP
   Definitions
      At line 217 in file ece353_main.s
   Uses
      At line 218 in file ece353_main.s
Comment: INFINITE_LOOP used once
SRC_ARRAY 00000008

Symbol: SRC_ARRAY
   Definitions
      At line 48 in file ece353_main.s
   Uses
      At line 120 in file ece353_main.s
      At line 174 in file ece353_main.s
      At line 193 in file ece353_main.s

START_FOR 000000EC

Symbol: START_FOR
   Definitions
      At line 196 in file ece353_main.s
   Uses
      At line 208 in file ece353_main.s
Comment: START_FOR used once
START_LOOP 00000090



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: START_LOOP
   Definitions
      At line 99 in file ece353_main.s
   Uses
      At line 110 in file ece353_main.s
Comment: START_LOOP used once
__main 00000088

Symbol: __main
   Definitions
      At line 90 in file ece353_main.s
   Uses
      At line 5 in file ece353_main.s
Comment: __main used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

WORD 00000004

Symbol: WORD
   Definitions
      At line 10 in file ece353_main.s
   Uses
      At line 20 in file ece353_main.s
      At line 26 in file ece353_main.s
      At line 27 in file ece353_main.s
      At line 28 in file ece353_main.s
      At line 156 in file ece353_main.s
      At line 165 in file ece353_main.s
      At line 199 in file ece353_main.s
      At line 200 in file ece353_main.s
      At line 201 in file ece353_main.s
      At line 202 in file ece353_main.s
      At line 203 in file ece353_main.s
      At line 204 in file ece353_main.s
      At line 205 in file ece353_main.s
      At line 206 in file ece353_main.s

1 symbol
353 symbols in table
